#!/bin/bash

## This script is very self explanatory. It goes into my builds
## directory (which is where I keep my AUR installs) and goes
## into each directory to update it

## $? is 0 on successful install

ERRORLOG="$HOME/aurror.txt"
BUILDSDIR="$HOME/builds"

rm -f $ERRORLOG
builtin cd $BUILDSDIR
SAVEIFS=$IFS
IFS=$(echo -en "\n\b")
builtin cd $BUILDSDIR
for REPO in *; do
	builtin cd $REPO
	echo $REPO
	STATUS=$(git pull)
	#for the following, use pacman -Q | grep ^"$REPO" | awk '{print $2}' to search for the current version in the PKGBUILD and see if there's a match
	if [[ $STATUS != *"Already up to date."* ]]; then # || [[ "$(grep -F pkgver= PKGBUILD | cut -d= -f2)" != "$(pacman -Qi "$REPO" | awk 'NR==2{ print $3 }')" ]]; then
		echo "Updating..."
		git fetch origin
		git reset --hard origin/master
		makepkg -si --noconfirm
		if !  [ $? -eq 0 ]; then
			echo "Error, bad build $REPO"
			echo "Error, bad build $REPO" >> $ERRORLOG
			echo "Retrying..."
			sudo rm -rf *
			git reset --hard
			makepkg -si --noconfirm
		fi
	else
		echo "Already up to date."
	fi
	cd ..
done
IFS=$SAVEIFS
