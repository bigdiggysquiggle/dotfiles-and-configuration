#!/bin/bash

# created so I didn't need to open github every
# time I had a new idea for a repo.

# if you plan to make use of this script, it is
# expecting you to your username and a personal access token in the file ~/.config/git/token that
# of course can be changed to whatever you want
# it to be including a regular password. I would
# advise against keeping your own password in
# plaintext in a bash script, but that's just me

# example of the config file:
# username=USER
# password=PASS

CONFIG=~/.config/git/token
USERNAME=$(grep username $CONFIG | cut -d= -f2)
PASSWORD=$(grep password $CONFIG | cut -d= -f2)
echo "name of repo:"
read REPO
echo "public or private:"
read PRIV
if [ "$PRIV" == "public" ]; then
	PRIV=false
else
	PRIV=true
fi
if [ ! -d ".git" ]; then
	git init
	git remote add origin git@github.com:"$USERNAME"/"$REPO".git
fi

curl -u "$USERNAME":"$PASSWORD" https://api.github.com/user/repos -d "{\"name\":\"$REPO\", \"private\":\"$PRIV\"}"

for FILE in *; do
	ITEMS+=("$FILE")
done
if [ -n "$ITEMS" ]; then
	git add "${ITEMS[@]}"
	git commit
	git push --set-upstream origin main
fi
if [ ! -f ".gitignore" ]; then
	cat << EOF > .gitignore
.gitignore
tags
EOF
fi
