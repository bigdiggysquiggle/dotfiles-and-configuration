#!/bin/bash

# because I'm constructing the session's i3config from a
# base config file, a stored variable informing us what
# lines to comment out, and an extras file concatonated
# onto the end of the base config, I need a way to save
# any and all changes I make to the session's config so
# they will remain persistent into the next session

# make a backup of our current configuration so we have
# something to diff against for changes
builtin cd $HOME/.config/i3
source ./.i3vars
cp config newconf
vim newconf

# check if there are any differences and thus if we need
# to update our variables
DIFFS="$(sdiff -l config newconf | cat -n | grep -v -e '($')"
if [ -z "$DIFFS" ]; then
	echo "no update necessary"
	rm newconf
	exit
fi

# get linecount of main config so it can be updated if needed
MAINLC=$(wc -l .mainconf | awk '{ print $1 }')

# create the list of new lines and whether they're being
# added or commented out
NEWLINES=()
while read LINE; do
	NEWLINES+=("$LINE")
done <<< $(echo "$DIFFS")

# create a new array housing all the lines that get commented
# out when concatonating the base config and extra config to
# make the sessions' i3config
# also add any new lines created during this session to the 
# base and extra configs as needed

#TODO sort out why the removal isn't working
#TODO sort out why the commenting out isn't working
i=0
for EACH in "${NEWLINES[@]}"; do
	NEWLINE=$(echo "$EACH" | awk '{ print $1 }')
	echo "$NEWLINE"
	while [ -n "$i3LINES" ] && [ $(($i3LINES+$i)) -lt $NEWLINE ]; do
		NEWARR+=$(($i3LINES+$i))
		i3LINES=("${i3LINES[@]:1}")
	done
	case "${NEWLINES[0]}" in
		*'>'*) # append
			echo "aend"
			NEWCONF=$(sed -n "$NEWLINE{p;q}" newconf)
			if [ $MAINLC -ge $NEWLINE ]; then
				sed -i --follow-symlinks "$NEWLINE i $NEWCONF" .mainconf
			else
				sed -i --follow-symlinks "$NEWLINE i $NEWCONF" .extraconf
			fi
			i=$(($i+1))
			;;
		*'<'*) # remove
			echo "reme"
			if [ $MAINLC -ge $NEWLINE ]; then
				sed -i --follow-symlinks "$NEWLINE d" .mainconf
			else
				sed -i --follow-symlinks "$(($MAINLC-$NEWLINE))d" .extraconf
			fi
			i=$(($i-1))
			;;
		*'|'*)
			# this is where this script breaks. I didn't
			# consider that I need to tell the difference
			# between commenting out and uncommenting
			echo default
			FIELD2=$(echo "${NEWLINES[0]}" | cut -d\| -f2 | awk '{$1=$1};1')
			echo "$FIELD2"
			if [ "${FIELD2::1}" == '#' ]; then
				echo "ad"
				CURRNUM=$(($i+$NEWLINE))
				NEWARR+=("$CURRNUM")
			else 
				i3LINES=("${i3LINES[@]:1}")
			fi
			;;
	esac
	NEWLINES=("${NEWLINES[@]:1}")
done
for LEFTOVER in "${i3LINES[@]}"; do
	NEWARR+=($(($i+$LEFTOVER)))
done
echo "NEWARR ${NEWARR[@]}"

# finally output the list of modified lines and clean up
sed -i --follow-symlinks 's/'"export i3LINES=.*"'/'"export\ i3LINES=(${NEWARR[*]})"'/' .i3vars
rm newconf
i3restart
